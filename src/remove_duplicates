#!/usr/bin/env python

# Copyright (C) <2015> EMBL-European Bioinformatics Institute

# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# Neither the institution name nor the name 2015_stm_ec can
# be used to endorse or promote products derived from this
# software without prior written permission. For written
# permission, please contact <marco@ebi.ac.uk>.

# Products derived from this software may not be called
# 2015_stm_ec nor may 2015_stm_ec appear in their names
# without prior written permission of the developers.
# You should have received a copy of the GNU General Public
# License along with this program. If not, see
# <http://www.gnu.org/licenses/>.

__author__ = "Marco Galardini"
__version__ = "0.0.1"

def get_options():
    import argparse

    # create the top-level parser
    description = "Remove duplicated sequences from a fasta file"
    parser = argparse.ArgumentParser(description = description,
                                     prog = 'remove_duplicates')
    parser.add_argument('infasta', action='store',
                        help='Input Fasta file')
    parser.add_argument('outfasta', action='store',
                        help='Output Fasta file')

    parser.add_argument('--version', action='version',
                         version='%(prog)s '+__version__)

    return parser.parse_args()

if __name__ == "__main__":
    from Bio import SeqIO
    import sys
    options = get_options()
    
    d = {}
    for s in SeqIO.parse(options.infasta, 'fasta'):
        if s.id in d:
            continue
        d[s.id] = s

    SeqIO.write(d.values(), options.outfasta, 'fasta')
